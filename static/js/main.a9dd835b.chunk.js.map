{"version":3,"sources":["util/Storage.js","components/login/Login.jsx","components/homepage/Homepage.jsx","services/TranslationService.js","components/login/UserTranslations.jsx","components/profile/UserProfilePage.jsx","components/login/UserInfo.jsx","components/translations/singImage/SignImages.jsx","components/translations/Translation.jsx","App.js","index.js"],"names":["getUsername","storedValue","localStorage","getItem","JSON","parse","Input","styled","input","LoginWrapper","div","LoginButton","button","Login","history","useHistory","useState","username","setUser","BASE_URL_USERS","getCurrentUser","useEffect","push","type","placeholder","onChange","e","target","value","onClick","setItem","stringify","user","fetch","method","headers","then","response","json","data","length","body","catch","error","console","addUser","Ol","ol","Logo","a","H1","h1","Homepage","currentUser","href","BASE_URL_SEARCHES","getUserByName","name","fetchAllActiveTranslationsById","userId","removeAllActiveTranslations","translations","i","id","status","TranslationService","removeTranslation","userData","getTranslations","translationsData","ListWrapper","Li","li","DeleteBtn","UserTranslations","removeAllTranslations","displayTranslations","map","t","text","Wrapper","section","A","UserProfilePage","setTranslations","isDeleted","setIsDeleted","log","to","ProfileWrapper","UserInfo","setValue","removeItem","SignImage","src","style","maxWidth","alt","height","PageContainer","TranslationWrapper","article","Content","TranslateBtn","SigsnWrapper","TranslationPage","translationText","setTranslationText","signImages","setSignImages","getTranslation","split","imgs","test","alert","App","exact","path","component","Translation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9dd835b.chunk.js","sourcesContent":["/**\r\n * Set username and save in localstorage.\r\n * @param {*} value\r\n */\r\n\r\nexport const setUsername = (value) => {\r\n localStorage.setItem(\"username\", JSON.stringify(value));\r\n};\r\n\r\n/**\r\n * Get username from the localstorage\r\n * @returns\r\n */\r\nexport const getUsername = () => {\r\n const storedValue = localStorage.getItem(\"username\");\r\n\r\n if (storedValue) {\r\n  return JSON.parse(storedValue);\r\n }\r\n\r\n return false;\r\n};\r\n\r\n/**\r\n * Clear username from the localstroge\r\n */\r\nexport const clearUsername = () => {\r\n localStorage.removeItem(\"username\");\r\n};\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { setUsername, getUsername } from \"../../util/Storage\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [username, setUser] = useState(\"\");\r\n  //const BASE_URL_USERS = \"http://localhost:3000/users\";\r\n  const BASE_URL_USERS =\r\n    \"https://lost-in-translations-experis.herokuapp.com/users/\";\r\n  const getCurrentUser = getUsername();\r\n\r\n  /**\r\n   * Redirects logged-in users to the translation page if they are already logged in\r\n   */\r\n  useEffect(() => {\r\n    if (getCurrentUser) {\r\n      history.push(\"/translate\");\r\n    }\r\n  });\r\n\r\n  /**\r\n   * It checks to see if the user exists in the database, if not, it adds the user\r\n   * @param {*} user\r\n   * @returns\r\n   */\r\n\r\n  const addUser = (user) => {\r\n    if (username === \"\") return;\r\n    try {\r\n      fetch(`${BASE_URL_USERS}?username=${username}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.length === 0) {\r\n            fetch(BASE_URL_USERS, {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(user),\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    } catch (e) {}\r\n  };\r\n  /**\r\n   * sets the user to logged in and re-directs the user to the translation page\r\n   */\r\n  const onLoginHandler = () => {\r\n    setUsername(username);\r\n    addUser({ username });\r\n    history.push(\"/translate\");\r\n  };\r\n\r\n  const onUsernameChangeHandler = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"username\"\r\n        onChange={onUsernameChangeHandler}\r\n      />\r\n      <LoginButton onClick={onLoginHandler}>Login</LoginButton>\r\n    </LoginWrapper>\r\n  );\r\n};\r\n\r\nconst Input = styled.input`\r\n  width: 30rem;\r\n  padding: 15px;\r\n  outline: none;\r\n  :hover {\r\n    background: #f9f5ff;\r\n  }\r\n`;\r\n\r\nconst LoginWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  height: 20vh;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  padding: 17px;\r\n  width: 17rem;\r\n  align-self: center;\r\n  font-size: 15px;\r\n  background: #14248a;\r\n  color: #fff;\r\n  letter-spacing: 1.3px;\r\n\r\n  :hover {\r\n    background: #fff;\r\n    color: #14248a;\r\n    border: 3px solid #14248a;\r\n    font-weight: bold;\r\n    box-shadow: 5px 5px 15px -1px #000000;\r\n  }\r\n`;\r\nexport default Login;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { getUsername } from \"../../util/Storage\";\r\nimport Login from \"../login/Login\";\r\n\r\nconst Homepage = () => {\r\n  const currentUser = getUsername();\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * If There's logged in user already it redirects to the translation page.\r\n   */\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push(\"/translate\");\r\n    }\r\n  });\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <Ol>\r\n          <li>\r\n            <Logo href=\"/homepage\">Lost in Translation</Logo>\r\n          </li>\r\n        </Ol>\r\n      </nav>\r\n      <LoginWrapper>\r\n        <H1>Lost in Translation</H1>\r\n        <Login />\r\n      </LoginWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Ol = styled.ol`\r\n  padding-left: 0px;\r\n`;\r\n\r\nconst LoginWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 70vh;\r\n`;\r\n\r\nconst Logo = styled.a`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #14248a;\r\n  letter-spacing: 1.3px;\r\n`;\r\nconst H1 = styled.h1`\r\n  font-family: \"Love Ya Like A Sister\", cursive;\r\n`;\r\nexport default Homepage;\r\n","import { getUsername } from \"../util/Storage\";\r\n\r\n//const BASE_URL_USERS = \"http://localhost:3000/users/\";\r\n//const BASE_URL_SEARCHES = \"http:/ / localhost: 3000 / keywords / \";\r\nconst BASE_URL_USERS =\r\n  \"https://lost-in-translations-experis.herokuapp.com/users/\"; //\"http://localhost:3000/users/\";\r\nconst BASE_URL_SEARCHES =\r\n  \"https://lost-in-translations-experis.herokuapp.com/keywords/\"; //\"http://localhost:3000/keywords/\";\r\nconst username = getUsername();\r\n\r\n/**\r\n * Retrieves the user's id\r\n * @param {*} name\r\n * @returns user's id\r\n */\r\nconst getUserByName = async (name) =>\r\n  await fetch(`${BASE_URL_USERS}?username=${name}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n/**\r\n * Retrieves all translations that are active for the logged in user\r\n * @param {*} userId\r\n * @returns Actice translations for the current user\r\n */\r\nconst fetchAllActiveTranslationsById = async (userId) =>\r\n  await fetch(`${BASE_URL_SEARCHES}?status=active&userId=${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n/**\r\n * Loop thru all translations and changes their status to 'deleted'\r\n * @param {*} translations\r\n */\r\nconst removeAllActiveTranslations = async (translations) => {\r\n  let i = 0;\r\n  while (i < translations.length) {\r\n    await fetch(BASE_URL_SEARCHES + translations[i].id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ status: \"deleted\" }),\r\n    });\r\n    i++;\r\n  }\r\n};\r\n\r\n/**\r\n * Removes all translations for the logged in user\r\n */\r\nconst removeTranslation = async () => {\r\n  const userId = await getUserByName(username);\r\n  const userData = await userId.json();\r\n\r\n  const getTranslations = await fetchAllActiveTranslationsById(userData[0].id);\r\n  const translationsData = await getTranslations.json();\r\n\r\n  await removeAllActiveTranslations(translationsData);\r\n};\r\n\r\nconst TranslationService = {\r\n  removeTranslation,\r\n};\r\n\r\nexport default TranslationService;\r\n","import styled from \"styled-components\";\r\n\r\n\r\n/**\r\n * Takes two props and displays all the translations and deletes them when clicked\r\n * @param {*} param\r\n * @returns \r\n */\r\nconst UserTranslations = ({ translations, removeAllTranslations }) => {\r\n  const displayTranslations = translations.map((t, id) => {\r\n    return (\r\n      <ol key={id}>\r\n        <Li> {t.text} </Li>\r\n      </ol>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <h1>Your last {translations.length} translations</h1>\r\n      {displayTranslations}\r\n      <DeleteBtn onClick={removeAllTranslations}>Clear Translations</DeleteBtn>\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nconst ListWrapper = styled.div`\r\n  width: 450px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  background-color: #eee;\r\n  margin-top: 20px;\r\n\r\n  box-shadow: 0px 2px 18px -6px #000000;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  list-style-position: outside;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: white;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst DeleteBtn = styled.button`\r\n  padding: 20px;\r\n  margin-top: 4rem;\r\n  width: 27rem;\r\n  align-self: center;\r\n  font-size: 17px;\r\n  background: #ef271b;\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n  letter-spacing: 1.3px;\r\n\r\n  :hover {\r\n    background: #fff;\r\n    color: #ef271b;\r\n    border: 1px solid #ef271b;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nexport default UserTranslations;\r\n","import { useEffect, useState } from \"react\";\r\nimport TranslationService from \"../../services/TranslationService\";\r\nimport { getUsername } from \"../../util/Storage\";\r\nimport { FiArrowRight } from \"react-icons/fi\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport UserTranslations from \"../login/UserTranslations\";\r\n\r\nconst UserProfilePage = () => {\r\n  const [translations, setTranslations] = useState(null);\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n  const BASE_URL_USERS =\r\n    \"https://lost-in-translations-experis.herokuapp.com/users/\"; //\"http://localhost:3000/users/\";\r\n  const BASE_URL_SEARCHES =\r\n    \"https://lost-in-translations-experis.herokuapp.com/keywords/\"; //\"http://localhost:3000/keywords/\";\r\n  const username = getUsername();\r\n\r\n  /**\r\n   * Gets the logged in user's 10 most recent translations\r\n   */\r\n  useEffect(() => {\r\n    if (username) {\r\n      fetch(`${BASE_URL_USERS}?username=${username}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"data=\", data);\r\n          fetch(\r\n            BASE_URL_SEARCHES +\r\n              \"?status=active&userId=\" +\r\n              data[0].id +\r\n              \"&_sort=id&_order=desc&_limit=10\",\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              setTranslations(data);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Remove all translations\r\n   */\r\n  const removeAllTranslations = async () => {\r\n    await TranslationService.removeTranslation(translations);\r\n    setTranslations(null);\r\n    setIsDeleted(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!username && <Redirect to=\"/homepage\" />}\r\n\r\n      <Wrapper>\r\n        <div>\r\n          {!isDeleted ? (\r\n            <>\r\n              {translations && (\r\n                <>\r\n                  <UserTranslations\r\n                    translations={translations}\r\n                    removeAllTranslations={removeAllTranslations}\r\n                  />\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h1>You just deleted all your translations 😱 </h1>\r\n              <A href=\"/translate\">\r\n                Go and Translate stuff <FiArrowRight />\r\n              </A>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};;;\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  height: 70vh;\r\n\r\n  place-items: center;\r\n`;\r\n\r\nconst A = styled.a`\r\n  font-size: 2.5rem;\r\n`;\r\nexport default UserProfilePage;\r\n","import { useState } from \"react\";\r\nimport { FaUserSecret } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\nimport { clearUsername } from \"../../util/Storage\";\r\n \r\n/**\r\n * This component is responsible for the current logged in user's info\r\n * It renders a logout button. When the button isClicked the local storage\r\n * gets cleared and the current user gets redirected to the homepage\r\n * @param {*} param0 \r\n * @returns \r\n */\r\nconst UserInfo = ({ username }) => {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const onLogoutHandler = () => {\r\n    clearUsername();\r\n    setValue(!value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {username && (\r\n        <>\r\n          <ProfileWrapper>\r\n            <A href=\"/user-profile\">\r\n              {username} <FaUserSecret />\r\n            </A>\r\n\r\n            <A href=\"/user-profile\"> Go Profile </A>\r\n            <A onClick={onLogoutHandler} href=\"/homepage\">\r\n              Log Out\r\n            </A>\r\n          </ProfileWrapper>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 40rem;\r\n  padding-right: 1rem;\r\n  height: 5vh;\r\n  font-size: 18px;\r\n`;\r\nconst A = styled.a`\r\n  color: #14248a;\r\n  font-size: 2rem;\r\n  letter-spacing: 1.3px;\r\n`;\r\nexport default UserInfo;\r\n","const SignImage = ({ src }) => {\r\n  return (\r\n    <img\r\n      style={{ maxWidth: \"100%\" }}\r\n      src={\"/sign-images/\" + src}\r\n      alt={src}\r\n      height=\"80\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SignImage;\r\n","import { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getUsername } from \"../../util/Storage\";\r\nimport UserInfo from \"../login/UserInfo\";\r\nimport SignImage from \"./singImage/SignImages\";\r\n\r\nconst TranslationPage = () => {\r\n  const [translationText, setTranslationText] = useState(\"\");\r\n\r\n  const [value, setValue] = useState(false);\r\n  const [signImages, setSignImages] = useState(null);\r\n  const BASE_URL_USERS =\r\n    \"https://lost-in-translations-experis.herokuapp.com/users/\"; //\"http://localhost:3000/users/\";\r\n  const username = getUsername();\r\n\r\n  /**\r\n   * * This function runs when translate btn cliked.\r\n   * When the requirements are met, the translation text is added to the translation resource\r\n   * @param {*} e\r\n   * @returns\r\n   */\r\n  const onTranslateHandle = (e) => {\r\n    if (!/[^a-zA-Z ]/.test(translationText)) {\r\n      fetch(`${BASE_URL_USERS}/?username=${username}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          fetch(`${BASE_URL_USERS}${data[0].id}/keywords`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              text: translationText,\r\n              status: \"active\",\r\n              userId: data[0].id,\r\n            }),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n      setValue(true);\r\n      getTranslation();\r\n    } else {\r\n      return alert(\"Only alphabet and spaces\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * The images array is updated with the translation text\r\n   */\r\n\r\n  const getTranslation = () => {\r\n    setSignImages(\r\n      translationText.split(\"\").map((imgs) => `../sign-images/${imgs}.png`)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * This function gets excuted when input is changed. (The translation box)\r\n   * @param {*} e\r\n   */\r\n  const onChangeHandle = (e) => {\r\n    setTranslationText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      {!username && <Redirect to=\"/homepage\" />}\r\n      <UserInfo username={username} />\r\n      <TranslationWrapper>\r\n        <Content>\r\n          <H1>Translate here....</H1>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"translation\"\r\n            id=\"translation\"\r\n            placeholder=\"Write here....\"\r\n            onChange={onChangeHandle}\r\n          />\r\n          <TranslateBtn onClick={onTranslateHandle}>Translate</TranslateBtn>\r\n        </Content>\r\n\r\n        {value === true && (\r\n          <>\r\n            <SigsnWrapper>\r\n              {signImages &&\r\n                signImages.map((src, id) => {\r\n                  if (src !== \"../sign-images/ .png\") {\r\n                    return <SignImage key={id} src={src} />;\r\n                  }\r\n                  return <div key={id} />;\r\n                })}\r\n            </SigsnWrapper>\r\n          </>\r\n        )}\r\n      </TranslationWrapper>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst PageContainer = styled.section`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  height: 70vh;\r\n  place-items: center;\r\n`;\r\n\r\nconst TranslationWrapper = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 30vh;\r\n  margin-bottom: 3rem;\r\n`;\r\nconst Input = styled.input`\r\n  width: 30rem;\r\n  padding: 15px;\r\n  outline: none;\r\n  :hover {\r\n    background: #f9f5ff;\r\n  }\r\n`;\r\nconst TranslateBtn = styled.button`\r\n  padding: 17px;\r\n  width: 17rem;\r\n  align-self: center;\r\n  font-size: 15px;\r\n  background: #14248a;\r\n  color: #fff;\r\n  letter-spacing: 1.3px;\r\n  margin: 1.5rem 0;\r\n  :hover {\r\n    background: #fff;\r\n    color: #14248a;\r\n    border: 3px solid #14248a;\r\n    font-weight: bold;\r\n    box-shadow: 5px 5px 15px -1px #000000;\r\n  }\r\n`;\r\n\r\nconst SigsnWrapper = styled.div`\r\n  box-shadow: 5px 5px 10px -3px #000000;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n`;\r\nconst H1 = styled.h1`\r\n  font-size: 2.5rem;\r\n`;\r\nexport default TranslationPage;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Homepage from \"./components/homepage/Homepage\";\r\n\r\nimport UserProfilePage from \"./components/profile/UserProfilePage\";\r\n\r\nimport Translation from \"./components/translations/Translation\";\r\n\r\n/**\r\n * The applications starts here...\r\n * @returns\r\n */\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/homepage\" />\r\n          </Route>\r\n          <Route path=\"/homepage\" component={Homepage} />\r\n          <Route path=\"/translate\" component={Translation} />\r\n          <Route path=\"/user-profile\" component={UserProfilePage} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}